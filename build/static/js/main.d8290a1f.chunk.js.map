{"version":3,"sources":["components/TodoItem.js","components/Input.js","components/Filter.js","lib/firebase.js","hooks/fbStorage.js","components/Todo.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","onCheck","className","type","checked","done","onChange","text","Input","onAdd","React","useState","setText","class","placeholder","value","e","target","onKeyDown","keyCode","Filter","handleClick","key","preventDefault","href","onClick","bind","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","getFbItems","a","collection","get","snapshot","items","docs","map","doc","data","id","console","log","addFbItem","todoRef","add","updateFbItem","update","clearFbItem","delete","then","catch","err","uiConf","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","storeUserInfo","user","uid","userDoc","exists","set","name","displayName","useFbStorage","setItems","useEffect","getItems","_items","addItem","newItem","updateItem","changes","newItems","Todo","clearItems","filter","setFilter","displayItems","handleCheck","evt","newText","Login","uiConfig","firebaseAuth","App","loading","setLoading","setUser","onAuthStateChanged","newUser","logout","signOut","UserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8290a1f.chunk.js","sourcesContent":["function TodoItem({ item, onCheck }) {\n  const handleChange = () => {\n    onCheck(item);\n  }\n  return (\n    <label className=\"panel-block\">\n      <input\n        type=\"checkbox\"\n        checked={item.done}\n        onChange={handleChange}\n      />\n      <span className={item.done ? 'has-text-grey-light' : ''}>\n        {item.text}\n      </span>\n    </label>\n  );\n}\n\nexport default TodoItem;","import React, { useState } from 'react';\n\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Todoを入力してください\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","function Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","import firebase from 'firebase';\n\nif (!firebase.apps.length) {\n    // Your web app's Firebase configuration\n    const firebaseConfig = {\n      apiKey: \"AIzaSyBz3mVL_ORNqKpLDk_eDmUtiTYItpYHA_Q\",\n      authDomain: \"fir-sample-2263c.firebaseapp.com\",\n      projectId: \"fir-sample-2263c\",\n      storageBucket: \"fir-sample-2263c.appspot.com\",\n      messagingSenderId: \"913703448881\",\n      appId: \"1:913703448881:web:efeecfac94f3811e038010\"\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.firestore();\n\nexport const auth = firebase.auth();\n\nexport default firebase;\n\nexport const getFbItems = async () => {\n  try {\n    const snapshot = await db\n      .collection(\"todos\")\n      .get();\n    const items = snapshot.docs.map(\n      (doc) => ({ ...doc.data(), id: doc.id })\n    );\n    return items;\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n}\n\nexport const addFbItem = async (item) => {\n  try {\n    const todoRef = db.collection(\"todos\");\n    await todoRef.add(item);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateFbItem = async (item, id) => {\n  try {\n    const todoRef = db.collection(\"todos\").doc(id);\n    await todoRef.update(item);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const clearFbItem = async (item) => {\n  const todoRef = db.collection(\"todos\").doc(item.id);\n  await todoRef.delete().then(function () {\n  }).catch(function (err) {\n    console.log(err);\n  });\n}; \n\nexport const uiConf = {\n  signInFlow: 'popup',\n  signInSuccessUrl: \"/\",\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n}\n\nexport const storeUserInfo = async (user) => {\n  const { uid } = user;\n  const userDoc = await db.collection(\"users\").doc(uid).get();\n  if (!userDoc.exists) {\n    await db.collection(\"users\").doc(uid).set({ name: user.displayName });\n    return {\n      name: user.displayName,\n      id: uid,\n    };\n  } else {\n    return {\n      id: uid,\n      ...userDoc.data(),\n    };\n  }\n} \n","import { useState, useEffect } from 'react';\nimport { addFbItem, updateFbItem, getFbItems, clearFbItem} from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n    \n    // async with real time\n  const getItems = async () => {\n    const _items = await getFbItems();\n    setItems(_items);\n  };\n\n  const addItem = async item => { \n    const newItem = { text: item.text, done: item.done };\n    await addFbItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateFbItem(changes, checked.id);\n    const newItems = items.map((item) => { //get new array for display\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => { // call clear for each item\n      clearFbItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage; \n","import React, { useState } from 'react';\n\n\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n\n//import useStorage from '../hooks/storage';\nimport useFbStorage from '../hooks/fbStorage';\n\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n  \n  const [filter, setFilter] = React.useState('ALL');\n\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = evt => {\n    updateItem(evt);\n  };\n  \n  const handleAdd = newText => {\n    addItem({ newText, done: false });\n  };\n  \n  const handleFilterChange = value => setFilter(value);\n\n  return (\n    <article class=\"panel\">\n      <div className=\"panel-heading\">\n          <span> ITSS Todoアプリ</span>\n      </div>\n      <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </article>\n  );\n}\n\nexport default Todo;","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConf } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    <div className=\"column panel-block\">\n      <StyledFirebaseAuth uiConfig={uiConf} firebaseAuth={auth} />\n    </div>\n  );\n};\n\nexport default Login; ","import React, { useEffect, useState } from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\n\nimport Login from \"./components/Login\";\n\nimport { auth, storeUserInfo } from \"./lib/firebase\";\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useState([]);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            setLoading(false);\n            let newUser = null;\n            if (user) {\n                newUser = await storeUserInfo(user);\n            }\n            setUser(newUser);\n        });\n    }, []);\n\n    const logout = () => {\n        auth.signOut();\n    };\n\n    const UserInfo = () => {\n        if (user) {\n            return (\n                <div class=\"navbar-end\">\n          \t<div class=\"navbar-item\">\n            \t{user.name}\n          \t</div>\n          \t<div class=\"navbar-item\">\n            \t<button class=\"button is-info is-light is-small\" onClick={logout} > Logout</button>\n          \t</div>\n        \t</div >\n            )\n        } else {\n            return (<Login />)\n        }\n    }\n\n    return (\n        <div className=\"container is-widescreen\">\n      \t\t<header class=\"navbar\">\n\t        \t{loading ? (\n\t          \t\t<p>\n\t            \tWAITING.....\n\t          \t</p>\n\t        \t) : (\n\t          \t<UserInfo />\n\t        \t)}\n\t      \t</header >\n\t      \t<div>\n\t       \t\t{user && <Todo />}\n\t      \t</div>\n    \t</div >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}